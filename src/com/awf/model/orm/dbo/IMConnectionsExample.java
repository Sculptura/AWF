package com.awf.model.orm.dbo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class IMConnectionsExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public IMConnectionsExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andConnectionidIsNull() {
            addCriterion("ConnectionID is null");
            return (Criteria) this;
        }

        public Criteria andConnectionidIsNotNull() {
            addCriterion("ConnectionID is not null");
            return (Criteria) this;
        }

        public Criteria andConnectionidEqualTo(String value) {
            addCriterion("ConnectionID =", value, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidNotEqualTo(String value) {
            addCriterion("ConnectionID <>", value, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidGreaterThan(String value) {
            addCriterion("ConnectionID >", value, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidGreaterThanOrEqualTo(String value) {
            addCriterion("ConnectionID >=", value, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidLessThan(String value) {
            addCriterion("ConnectionID <", value, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidLessThanOrEqualTo(String value) {
            addCriterion("ConnectionID <=", value, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidLike(String value) {
            addCriterion("ConnectionID like", value, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidNotLike(String value) {
            addCriterion("ConnectionID not like", value, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidIn(List<String> values) {
            addCriterion("ConnectionID in", values, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidNotIn(List<String> values) {
            addCriterion("ConnectionID not in", values, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidBetween(String value1, String value2) {
            addCriterion("ConnectionID between", value1, value2, "connectionid");
            return (Criteria) this;
        }

        public Criteria andConnectionidNotBetween(String value1, String value2) {
            addCriterion("ConnectionID not between", value1, value2, "connectionid");
            return (Criteria) this;
        }

        public Criteria andEstablishedonIsNull() {
            addCriterion("EstablishedOn is null");
            return (Criteria) this;
        }

        public Criteria andEstablishedonIsNotNull() {
            addCriterion("EstablishedOn is not null");
            return (Criteria) this;
        }

        public Criteria andEstablishedonEqualTo(Date value) {
            addCriterion("EstablishedOn =", value, "establishedon");
            return (Criteria) this;
        }

        public Criteria andEstablishedonNotEqualTo(Date value) {
            addCriterion("EstablishedOn <>", value, "establishedon");
            return (Criteria) this;
        }

        public Criteria andEstablishedonGreaterThan(Date value) {
            addCriterion("EstablishedOn >", value, "establishedon");
            return (Criteria) this;
        }

        public Criteria andEstablishedonGreaterThanOrEqualTo(Date value) {
            addCriterion("EstablishedOn >=", value, "establishedon");
            return (Criteria) this;
        }

        public Criteria andEstablishedonLessThan(Date value) {
            addCriterion("EstablishedOn <", value, "establishedon");
            return (Criteria) this;
        }

        public Criteria andEstablishedonLessThanOrEqualTo(Date value) {
            addCriterion("EstablishedOn <=", value, "establishedon");
            return (Criteria) this;
        }

        public Criteria andEstablishedonIn(List<Date> values) {
            addCriterion("EstablishedOn in", values, "establishedon");
            return (Criteria) this;
        }

        public Criteria andEstablishedonNotIn(List<Date> values) {
            addCriterion("EstablishedOn not in", values, "establishedon");
            return (Criteria) this;
        }

        public Criteria andEstablishedonBetween(Date value1, Date value2) {
            addCriterion("EstablishedOn between", value1, value2, "establishedon");
            return (Criteria) this;
        }

        public Criteria andEstablishedonNotBetween(Date value1, Date value2) {
            addCriterion("EstablishedOn not between", value1, value2, "establishedon");
            return (Criteria) this;
        }

        public Criteria andUser1IsNull() {
            addCriterion("User1 is null");
            return (Criteria) this;
        }

        public Criteria andUser1IsNotNull() {
            addCriterion("User1 is not null");
            return (Criteria) this;
        }

        public Criteria andUser1EqualTo(Integer value) {
            addCriterion("User1 =", value, "user1");
            return (Criteria) this;
        }

        public Criteria andUser1NotEqualTo(Integer value) {
            addCriterion("User1 <>", value, "user1");
            return (Criteria) this;
        }

        public Criteria andUser1GreaterThan(Integer value) {
            addCriterion("User1 >", value, "user1");
            return (Criteria) this;
        }

        public Criteria andUser1GreaterThanOrEqualTo(Integer value) {
            addCriterion("User1 >=", value, "user1");
            return (Criteria) this;
        }

        public Criteria andUser1LessThan(Integer value) {
            addCriterion("User1 <", value, "user1");
            return (Criteria) this;
        }

        public Criteria andUser1LessThanOrEqualTo(Integer value) {
            addCriterion("User1 <=", value, "user1");
            return (Criteria) this;
        }

        public Criteria andUser1In(List<Integer> values) {
            addCriterion("User1 in", values, "user1");
            return (Criteria) this;
        }

        public Criteria andUser1NotIn(List<Integer> values) {
            addCriterion("User1 not in", values, "user1");
            return (Criteria) this;
        }

        public Criteria andUser1Between(Integer value1, Integer value2) {
            addCriterion("User1 between", value1, value2, "user1");
            return (Criteria) this;
        }

        public Criteria andUser1NotBetween(Integer value1, Integer value2) {
            addCriterion("User1 not between", value1, value2, "user1");
            return (Criteria) this;
        }

        public Criteria andUser2IsNull() {
            addCriterion("User2 is null");
            return (Criteria) this;
        }

        public Criteria andUser2IsNotNull() {
            addCriterion("User2 is not null");
            return (Criteria) this;
        }

        public Criteria andUser2EqualTo(Integer value) {
            addCriterion("User2 =", value, "user2");
            return (Criteria) this;
        }

        public Criteria andUser2NotEqualTo(Integer value) {
            addCriterion("User2 <>", value, "user2");
            return (Criteria) this;
        }

        public Criteria andUser2GreaterThan(Integer value) {
            addCriterion("User2 >", value, "user2");
            return (Criteria) this;
        }

        public Criteria andUser2GreaterThanOrEqualTo(Integer value) {
            addCriterion("User2 >=", value, "user2");
            return (Criteria) this;
        }

        public Criteria andUser2LessThan(Integer value) {
            addCriterion("User2 <", value, "user2");
            return (Criteria) this;
        }

        public Criteria andUser2LessThanOrEqualTo(Integer value) {
            addCriterion("User2 <=", value, "user2");
            return (Criteria) this;
        }

        public Criteria andUser2In(List<Integer> values) {
            addCriterion("User2 in", values, "user2");
            return (Criteria) this;
        }

        public Criteria andUser2NotIn(List<Integer> values) {
            addCriterion("User2 not in", values, "user2");
            return (Criteria) this;
        }

        public Criteria andUser2Between(Integer value1, Integer value2) {
            addCriterion("User2 between", value1, value2, "user2");
            return (Criteria) this;
        }

        public Criteria andUser2NotBetween(Integer value1, Integer value2) {
            addCriterion("User2 not between", value1, value2, "user2");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("Status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("Status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(String value) {
            addCriterion("Status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(String value) {
            addCriterion("Status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(String value) {
            addCriterion("Status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(String value) {
            addCriterion("Status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(String value) {
            addCriterion("Status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(String value) {
            addCriterion("Status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLike(String value) {
            addCriterion("Status like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotLike(String value) {
            addCriterion("Status not like", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<String> values) {
            addCriterion("Status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<String> values) {
            addCriterion("Status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(String value1, String value2) {
            addCriterion("Status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(String value1, String value2) {
            addCriterion("Status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andExpiredonIsNull() {
            addCriterion("ExpiredOn is null");
            return (Criteria) this;
        }

        public Criteria andExpiredonIsNotNull() {
            addCriterion("ExpiredOn is not null");
            return (Criteria) this;
        }

        public Criteria andExpiredonEqualTo(Date value) {
            addCriterion("ExpiredOn =", value, "expiredon");
            return (Criteria) this;
        }

        public Criteria andExpiredonNotEqualTo(Date value) {
            addCriterion("ExpiredOn <>", value, "expiredon");
            return (Criteria) this;
        }

        public Criteria andExpiredonGreaterThan(Date value) {
            addCriterion("ExpiredOn >", value, "expiredon");
            return (Criteria) this;
        }

        public Criteria andExpiredonGreaterThanOrEqualTo(Date value) {
            addCriterion("ExpiredOn >=", value, "expiredon");
            return (Criteria) this;
        }

        public Criteria andExpiredonLessThan(Date value) {
            addCriterion("ExpiredOn <", value, "expiredon");
            return (Criteria) this;
        }

        public Criteria andExpiredonLessThanOrEqualTo(Date value) {
            addCriterion("ExpiredOn <=", value, "expiredon");
            return (Criteria) this;
        }

        public Criteria andExpiredonIn(List<Date> values) {
            addCriterion("ExpiredOn in", values, "expiredon");
            return (Criteria) this;
        }

        public Criteria andExpiredonNotIn(List<Date> values) {
            addCriterion("ExpiredOn not in", values, "expiredon");
            return (Criteria) this;
        }

        public Criteria andExpiredonBetween(Date value1, Date value2) {
            addCriterion("ExpiredOn between", value1, value2, "expiredon");
            return (Criteria) this;
        }

        public Criteria andExpiredonNotBetween(Date value1, Date value2) {
            addCriterion("ExpiredOn not between", value1, value2, "expiredon");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedIsNull() {
            addCriterion("ConnectionSaved is null");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedIsNotNull() {
            addCriterion("ConnectionSaved is not null");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedEqualTo(String value) {
            addCriterion("ConnectionSaved =", value, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedNotEqualTo(String value) {
            addCriterion("ConnectionSaved <>", value, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedGreaterThan(String value) {
            addCriterion("ConnectionSaved >", value, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedGreaterThanOrEqualTo(String value) {
            addCriterion("ConnectionSaved >=", value, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedLessThan(String value) {
            addCriterion("ConnectionSaved <", value, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedLessThanOrEqualTo(String value) {
            addCriterion("ConnectionSaved <=", value, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedLike(String value) {
            addCriterion("ConnectionSaved like", value, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedNotLike(String value) {
            addCriterion("ConnectionSaved not like", value, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedIn(List<String> values) {
            addCriterion("ConnectionSaved in", values, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedNotIn(List<String> values) {
            addCriterion("ConnectionSaved not in", values, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedBetween(String value1, String value2) {
            addCriterion("ConnectionSaved between", value1, value2, "connectionsaved");
            return (Criteria) this;
        }

        public Criteria andConnectionsavedNotBetween(String value1, String value2) {
            addCriterion("ConnectionSaved not between", value1, value2, "connectionsaved");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated do_not_delete_during_merge Wed Dec 12 10:36:58 GST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table dbo.IMConnections
     *
     * @mbg.generated Wed Dec 12 10:36:58 GST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}